{"version":3,"file":"static/js/554.f3dd8171.chunk.js","mappings":"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","sources":["features/dashboard/components/DashboardStats.js","features/dashboard/components/PageStats.js","../node_modules/@heroicons/react/24/outline/esm/UserGroupIcon.js","../node_modules/@heroicons/react/24/outline/esm/CircleStackIcon.js","../node_modules/@heroicons/react/24/outline/esm/CreditCardIcon.js","features/dashboard/components/UserChannels.js","features/dashboard/components/LineChart.js","features/dashboard/components/BarChart.js","features/dashboard/components/DashboardTopBar.js","features/dashboard/components/DoughnutChart.js","features/dashboard/index.js","pages/protected/Dashboard.js","../node_modules/capitalize-the-first-letter/capitalize.js"],"sourcesContent":["function DashboardStats({title, icon, value, description, colorIndex}){\n\n    const COLORS = [\"primary\", \"primary\"]\n\n    const getDescStyle = () => {\n        if(description.includes(\"↗︎\"))return \"font-bold text-green-700 dark:text-green-300\"\n        else if(description.includes(\"↙\"))return \"font-bold text-rose-500 dark:text-red-400\"\n        else return \"\"\n    }\n\n    return(\n        <div className=\"stats shadow\">\n            <div className=\"stat\">\n                <div className={`stat-figure dark:text-slate-300 text-${COLORS[colorIndex%2]}`}>{icon}</div>\n                <div className=\"stat-title dark:text-slate-300\">{title}</div>\n                <div className={`stat-value dark:text-slate-300 text-${COLORS[colorIndex%2]}`}>{value}</div>\n                <div className={\"stat-desc  \" + getDescStyle()}>{description}</div>\n            </div>\n        </div>\n    )\n}\n\nexport default DashboardStats","import HeartIcon  from '@heroicons/react/24/outline/HeartIcon'\nimport BoltIcon  from '@heroicons/react/24/outline/BoltIcon'\n\n\nfunction PageStats({}){\n    return(\n        <div className=\"stats bg-base-100 shadow\">\n  \n  <div className=\"stat\">\n    <div className=\"stat-figure invisible md:visible\">\n        <HeartIcon className='w-8 h-8'/>\n    </div>\n    <div className=\"stat-title\">Total Likes</div>\n    <div className=\"stat-value\">25.6K</div>\n    <div className=\"stat-desc\">21% more than last month</div>\n  </div>\n  \n  <div className=\"stat\">\n    <div className=\"stat-figure invisible md:visible\">\n        <BoltIcon className='w-8 h-8'/>\n    </div>\n    <div className=\"stat-title\">Page Views</div>\n    <div className=\"stat-value\">2.6M</div>\n    <div className=\"stat-desc\">14% more than last month</div>\n  </div>\n</div>\n    )\n}\n\nexport default PageStats","import * as React from \"react\";\nfunction UserGroupIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M18 18.72a9.094 9.094 0 003.741-.479 3 3 0 00-4.682-2.72m.94 3.198l.001.031c0 .225-.012.447-.037.666A11.944 11.944 0 0112 21c-2.17 0-4.207-.576-5.963-1.584A6.062 6.062 0 016 18.719m12 0a5.971 5.971 0 00-.941-3.197m0 0A5.995 5.995 0 0012 12.75a5.995 5.995 0 00-5.058 2.772m0 0a3 3 0 00-4.681 2.72 8.986 8.986 0 003.74.477m.94-3.197a5.971 5.971 0 00-.94 3.197M15 6.75a3 3 0 11-6 0 3 3 0 016 0zm6 3a2.25 2.25 0 11-4.5 0 2.25 2.25 0 014.5 0zm-13.5 0a2.25 2.25 0 11-4.5 0 2.25 2.25 0 014.5 0z\"\n  }));\n}\nconst ForwardRef = React.forwardRef(UserGroupIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction CircleStackIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M20.25 6.375c0 2.278-3.694 4.125-8.25 4.125S3.75 8.653 3.75 6.375m16.5 0c0-2.278-3.694-4.125-8.25-4.125S3.75 4.097 3.75 6.375m16.5 0v11.25c0 2.278-3.694 4.125-8.25 4.125s-8.25-1.847-8.25-4.125V6.375m16.5 0v3.75m-16.5-3.75v3.75m16.5 0v3.75C20.25 16.153 16.556 18 12 18s-8.25-1.847-8.25-4.125v-3.75m16.5 0c0 2.278-3.694 4.125-8.25 4.125s-8.25-1.847-8.25-4.125\"\n  }));\n}\nconst ForwardRef = React.forwardRef(CircleStackIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction CreditCardIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M2.25 8.25h19.5M2.25 9h19.5m-16.5 5.25h6m-6 2.25h3m-3.75 3h15a2.25 2.25 0 002.25-2.25V6.75A2.25 2.25 0 0019.5 4.5h-15a2.25 2.25 0 00-2.25 2.25v10.5A2.25 2.25 0 004.5 19.5z\"\n  }));\n}\nconst ForwardRef = React.forwardRef(CreditCardIcon);\nexport default ForwardRef;","import TitleCard from \"../../../components/Cards/TitleCard\"\n\nconst userSourceData = [\n    {source : \"Facebook Ads\", count : \"26,345\", conversionPercent : 10.2},\n    {source : \"Google Ads\", count : \"21,341\", conversionPercent : 11.7},\n    {source : \"Instagram Ads\", count : \"34,379\", conversionPercent : 12.4},\n    {source : \"Affiliates\", count : \"12,359\", conversionPercent : 20.9},\n    {source : \"Organic\", count : \"10,345\", conversionPercent : 10.3},\n]\n\nfunction UserChannels(){\n    return(\n        <TitleCard title={\"User Signup Source\"}>\n             {/** Table Data */}\n             <div className=\"overflow-x-auto\">\n                <table className=\"table w-full\">\n                    <thead>\n                    <tr>\n                        <th></th>\n                        <th className=\"normal-case\">Source</th>\n                        <th className=\"normal-case\">No of Users</th>\n                        <th className=\"normal-case\">Conversion</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                        {\n                            userSourceData.map((u, k) => {\n                                return(\n                                    <tr key={k}>\n                                        <th>{k+1}</th>\n                                        <td>{u.source}</td>\n                                        <td>{u.count}</td>\n                                        <td>{`${u.conversionPercent}%`}</td>\n                                    </tr>\n                                )\n                            })\n                        }\n                    </tbody>\n                </table>\n            </div>\n        </TitleCard>\n    )\n}\n\nexport default UserChannels","import {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Filler,\n  Legend,\n} from 'chart.js';\nimport { Line } from 'react-chartjs-2';\nimport TitleCard from '../../../components/Cards/TitleCard';\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Filler,\n  Legend\n);\n\nfunction LineChart(){\n\n  const options = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'top',\n      },\n    },\n  };\n\n  \n  const labels = ['January', 'February', 'March', 'April', 'May', 'June', 'July'];\n\n  const data = {\n  labels,\n  datasets: [\n    {\n      fill: true,\n      label: 'MAU',\n      data: labels.map(() => { return Math.random() * 100 + 500 }),\n      borderColor: 'rgb(53, 162, 235)',\n      backgroundColor: 'rgba(53, 162, 235, 0.5)',\n    },\n  ],\n};\n  \n\n    return(\n      <TitleCard title={\"Montly Active Users (in K)\"}>\n          <Line data={data} options={options}/>\n      </TitleCard>\n    )\n}\n\n\nexport default LineChart","import {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend,\n} from 'chart.js';\nimport { Bar } from 'react-chartjs-2';\nimport TitleCard from '../../../components/Cards/TitleCard';\n\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\n\nfunction BarChart(){\n\n    const options = {\n        responsive: true,\n        plugins: {\n          legend: {\n            position: 'top',\n          }\n        },\n      };\n      \n      const labels = ['January', 'February', 'March', 'April', 'May', 'June', 'July'];\n      \n      const data = {\n        labels,\n        datasets: [\n          {\n            label: 'Store 1',\n            data: labels.map(() => { return Math.random() * 1000 + 500 }),\n            backgroundColor: 'rgba(255, 99, 132, 1)',\n          },\n          {\n            label: 'Store 2',\n            data: labels.map(() => { return Math.random() * 1000 + 500 }),\n            backgroundColor: 'rgba(53, 162, 235, 1)',\n          },\n        ],\n      };\n\n    return(\n      <TitleCard title={\"Revenue\"}>\n            <Bar options={options} data={data} />\n      </TitleCard>\n\n    )\n}\n\n\nexport default BarChart","import SelectBox from \"../../../components/Input/SelectBox\"\nimport ArrowDownTrayIcon  from '@heroicons/react/24/outline/ArrowDownTrayIcon'\nimport ShareIcon  from '@heroicons/react/24/outline/ShareIcon'\nimport EnvelopeIcon  from '@heroicons/react/24/outline/EnvelopeIcon'\nimport EllipsisVerticalIcon  from '@heroicons/react/24/outline/EllipsisVerticalIcon'\nimport ArrowPathIcon  from '@heroicons/react/24/outline/ArrowPathIcon'\nimport { useState } from \"react\"\nimport Datepicker from \"react-tailwindcss-datepicker\"; \n\n\n\nconst periodOptions = [\n    {name : \"Today\", value : \"TODAY\"},\n    {name : \"Yesterday\", value : \"YESTERDAY\"},\n    {name : \"This Week\", value : \"THIS_WEEK\"},\n    {name : \"Last Week\", value : \"LAST_WEEK\"},\n    {name : \"This Month\", value : \"THIS_MONTH\"},\n    {name : \"Last Month\", value : \"LAST_MONTH\"},\n]\n\nfunction DashboardTopBar({updateDashboardPeriod}){\n\n        const [dateValue, setDateValue] = useState({ \n            startDate: new Date(), \n            endDate: new Date() \n        }); \n        \n        const handleDatePickerValueChange = (newValue) => {\n            console.log(\"newValue:\", newValue); \n            setDateValue(newValue); \n            updateDashboardPeriod(newValue)\n        } \n\n\n    return(\n        <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-4\">\n            <div className=\"\">\n            {/* <Datepicker \n                containerClassName=\"w-72 \" \n                value={dateValue} \n                theme={\"light\"}\n                inputClassName=\"input input-bordered w-72\" \n                popoverDirection={\"down\"}\n                toggleClassName=\"invisible\"\n                onChange={handleDatePickerValueChange} \n                showShortcuts={true} \n                primaryColor={\"white\"} \n            />  */}\n            {/* <SelectBox \n                options={periodOptions}\n                labelTitle=\"Period\"\n                placeholder=\"Select date range\"\n                containerStyle=\"w-72\"\n                labelStyle=\"hidden\"\n                defaultValue=\"TODAY\"\n                updateFormValue={updateSelectBoxValue}\n            /> */}\n            </div>\n            {/* <div className=\"text-right \">\n                <button className=\"btn btn-ghost btn-sm normal-case\"><ArrowPathIcon className=\"w-4 mr-2\"/>Refresh Data</button>\n                <button className=\"btn btn-ghost btn-sm normal-case  ml-2\"><ShareIcon className=\"w-4 mr-2\"/>Share</button>\n\n                <div className=\"dropdown dropdown-bottom dropdown-end  ml-2\">\n                    <label tabIndex={0} className=\"btn btn-ghost btn-sm normal-case btn-square \"><EllipsisVerticalIcon className=\"w-5\"/></label>\n                    <ul tabIndex={0} className=\"dropdown-content menu menu-compact  p-2 shadow bg-base-100 rounded-box w-52\">\n                        <li><a><EnvelopeIcon className=\"w-4\"/>Email Digests</a></li>\n                        <li><a><ArrowDownTrayIcon className=\"w-4\"/>Download</a></li>\n                    </ul>\n                </div>\n            </div> */}\n        </div>\n    )\n}\n\nexport default DashboardTopBar","import {\n  Chart as ChartJS,\n  Filler,\n  ArcElement,\n  Title,\n  Tooltip,\n  Legend,\n} from 'chart.js';\nimport { Doughnut } from 'react-chartjs-2';\nimport TitleCard from '../../../components/Cards/TitleCard';\nimport Subtitle from '../../../components/Typography/Subtitle';\n\nChartJS.register(ArcElement, Tooltip, Legend,\n    Tooltip,\n    Filler,\n    Legend);\n\nfunction DoughnutChart(){\n\n    const options = {\n        responsive: true,\n        plugins: {\n          legend: {\n            position: 'top',\n          },\n        },\n      };\n      \n      const labels = ['Electronics', 'Home Applicances', 'Beauty', 'Furniture', 'Watches', 'Apparel'];\n      \n      const data = {\n        labels,\n        datasets: [\n            {\n                label: '# of Orders',\n                data: [122, 219, 30, 51, 82, 13],\n                backgroundColor: [\n                  'rgba(255, 99, 132, 0.8)',\n                  'rgba(54, 162, 235, 0.8)',\n                  'rgba(255, 206, 86, 0.8)',\n                  'rgba(75, 192, 192, 0.8)',\n                  'rgba(153, 102, 255, 0.8)',\n                  'rgba(255, 159, 64, 0.8)',\n                ],\n                borderColor: [\n                  'rgba(255, 99, 132, 1)',\n                  'rgba(54, 162, 235, 1)',\n                  'rgba(255, 206, 86, 1)',\n                  'rgba(75, 192, 192, 1)',\n                  'rgba(153, 102, 255, 1)',\n                  'rgba(255, 159, 64, 1)',\n                ],\n                borderWidth: 1,\n              }\n        ],\n      };\n\n    return(\n        <TitleCard title={\"Orders by Category\"}>\n                <Doughnut options={options} data={data} />\n        </TitleCard>\n    )\n}\n\n\nexport default DoughnutChart","import DashboardStats from './components/DashboardStats'\nimport AmountStats from './components/AmountStats'\nimport PageStats from './components/PageStats'\n\nimport UserGroupIcon  from '@heroicons/react/24/outline/UserGroupIcon'\nimport UsersIcon  from '@heroicons/react/24/outline/UsersIcon'\nimport CircleStackIcon  from '@heroicons/react/24/outline/CircleStackIcon'\nimport CreditCardIcon  from '@heroicons/react/24/outline/CreditCardIcon'\nimport UserChannels from './components/UserChannels'\nimport LineChart from './components/LineChart'\nimport BarChart from './components/BarChart'\nimport DashboardTopBar from './components/DashboardTopBar'\nimport { useDispatch } from 'react-redux'\nimport {showNotification} from '../common/headerSlice'\nimport DoughnutChart from './components/DoughnutChart'\nimport { useState } from 'react'\n\nconst statsData = [\n    {title : \"New Users\", value : \"34.7k\", icon : <UserGroupIcon className='w-8 h-8'/>, description : \"↗︎ 2300 (22%)\"},\n    {title : \"TotalEvents\", value : \"$34,545\", icon : <CreditCardIcon className='w-8 h-8'/>, description : \"Current month\"},\n    {title : \"Total News\", value : \"450\", icon : <CircleStackIcon className='w-8 h-8'/>, description : \"50 in hot leads\"},\n    // {title : \"\", value : \"5.6k\", icon : <UsersIcon className='w-8 h-8'/>, description : \"↙ 300 (18%)\"},\n]\n\n\n\nfunction Dashboard(){\n\n    const dispatch = useDispatch()\n \n\n    const updateDashboardPeriod = (newRange) => {\n        // Dashboard range changed, write code to refresh your values\n        dispatch(showNotification({message : `Period updated to ${newRange.startDate} to ${newRange.endDate}`, status : 1}))\n    }\n\n    return(\n        <>\n            <DashboardTopBar updateDashboardPeriod={updateDashboardPeriod}/>\n            <div className=\"grid lg:grid-cols-4 mt-2 md:grid-cols-2 grid-cols-1 gap-6\">\n                {\n                    statsData.map((d, k) => {\n                        return (\n                            <DashboardStats key={k} {...d} colorIndex={k}/>\n                        )\n                    })\n                }\n            </div>\n\n\n\n            <div className=\"grid lg:grid-cols-1 mt-2 grid-cols-1 gap-6\">\n                <LineChart />\n            </div>\n            \n        </>\n    )\n}\n\nexport default Dashboard","import { useEffect } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { setPageTitle } from '../../features/common/headerSlice'\nimport Dashboard from '../../features/dashboard/index'\n\nfunction InternalPage(){\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        dispatch(setPageTitle({ title : \"Dashboard\"}))\n      }, [])\n\n\n    return(\n        <Dashboard />\n    )\n}\n\nexport default InternalPage","module.exports = (sentence) => {\n  const splitSentence = sentence.split(\" \")\n  const returnedV = splitSentence.map(\n    (word) => word[0].toUpperCase() + word.substring(1)\n  )\n  return returnedV.join(\" \")\n}"],"names":["_ref","title","icon","value","description","colorIndex","COLORS","_jsx","className","children","_jsxs","concat","includes","React","svgRef","titleId","props","_objectWithoutProperties","_excluded","Object","assign","xmlns","fill","viewBox","strokeWidth","stroke","ref","id","strokeLinecap","strokeLinejoin","d","ChartJS","register","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Filler","Legend","labels","data","datasets","label","map","Math","random","borderColor","backgroundColor","TitleCard","Line","options","responsive","plugins","legend","position","BarElement","updateDashboardPeriod","_useState","useState","startDate","Date","endDate","_useState2","_slicedToArray","ArcElement","statsData","UserGroupIcon","CreditCardIcon","CircleStackIcon","dispatch","useDispatch","_Fragment","DashboardTopBar","newRange","showNotification","message","status","k","DashboardStats","_objectSpread","LineChart","useEffect","setPageTitle","Dashboard","module","exports","sentence","split","word","toUpperCase","substring","join"],"sourceRoot":""}