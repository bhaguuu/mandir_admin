{"version":3,"file":"static/js/193.d66bb251.chunk.js","mappings":"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","sources":["components/SearchBar.js","features/leads/index.js","pages/protected/Leads.js"],"sourcesContent":["import React, { useState } from 'react'\nimport { USER_CONFIG } from '../constants/User'\nimport { API_REQUEST } from '../api';\nimport './search.css'\nexport default function SearchBar({url,results,isNoData}) {\n    const [search, setSearch] = useState('')\n\n    const searchData=async()=>{\n        try {\n            console.log(url,\"uel\");\n            if(!search)\n                return\n            const token=localStorage.getItem(USER_CONFIG.TOKEN_DETAIL);\n            const result=await API_REQUEST.postData(url,{query:search},token);\n            if(result.error)\n                throw result\n            results(result.data.data);\n        } catch (error) {\n            results([]);\n        }\n    }\n\n    return (\n        <div style={{padding:10,marginBottom:10,borderRadius:5,borderWidth:1,borderColor:\"grey\",display:\"flex\",justifyContent:\"space-between\"}} >\n            <input \n                className='searchInput'\n                type=\"text\" \n                placeholder=\"Search name\" \n                value={search}\n                onChange={(e) => {\n                    if(e.target.value===\"\")\n                        results([])\n                    setSearch(e.target.value)\n                }}\n                style={{width:'80%',paddingLeft:20,fontWeight:\"500\",borderStyle:\"none\",border:0}}\n            />\n            <button className=\"btn px-6 btn-sm normal-case btn-primary\" onClick={searchData}>\n                Search\n            </button>\n        </div>\n    )\n}\n","import moment from \"moment\"\nimport { useEffect, useMemo } from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport TitleCard from \"../../components/Cards/TitleCard\"\nimport { openModal } from \"../common/modalSlice\"\nimport { deleteLead, getLeadsContent } from \"./leadSlice\"\nimport { CONFIRMATION_MODAL_CLOSE_TYPES, MODAL_BODY_TYPES } from '../../utils/globalConstantUtil'\nimport TrashIcon from '@heroicons/react/24/outline/TrashIcon'\nimport { showNotification } from '../common/headerSlice'\nimport { API_REQUEST } from \"../../api\"\nimport { URSL } from \"../../constants/URLS\"\nimport { useState } from \"react\"\nimport { USER_CONFIG } from \"../../constants/User\"\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Pagination from \"../../components/pagination/pagination\"\nimport ReactPaginate from \"react-paginate\"\nimport './paginate.css'\nimport SearchBar from \"../../components/SearchBar\"\nconst TopSideButtons = () => {\n\n    const dispatch = useDispatch()\n\n    const openAddNewLeadModal = () => {\n        dispatch(openModal({title : \"Add New User\", bodyType : MODAL_BODY_TYPES.LEAD_ADD_NEW}))\n    }\n\n    return(\n        <div className=\"inline-block float-right\">\n            <button className=\"btn px-6 btn-sm normal-case btn-primary\" onClick={() => openAddNewLeadModal()}>Add New</button>\n        </div>\n    )\n}\nconst TopSecondButton = () => {\n\n    const dispatch = useDispatch()\n\n    const openAddNewLeadModal = () => {\n        dispatch(openModal({title : \"Add Excel File\", bodyType : MODAL_BODY_TYPES.MODAL_EXCEL_ADD}))\n    }\n\n    return(\n        <div className=\"inline-block float-right\" style={{marginLeft: 10,}}>\n            <button className=\"btn px-6 btn-sm normal-case btn-primary\" onClick={() => openAddNewLeadModal()}>Add Excel File</button>\n        </div>\n    )\n}\nlet PageSize = 0;\n\nfunction Leads(){\n    const dispatch=useDispatch()\n    const [allUsers,setAllUsers]=useState([]);\n    const [searchedUser,serDearchedUser]=useState([]);\n    const [page,setPage]=useState(1)\n    const [currentPage, setCurrentPage] = useState(1);\n    const paginate = ({ selected }) => {\n       setCurrentPage(selected + 1);\n       getAllUsers(selected+1)\n    };\n\n    \n    useEffect(()=>{\n        getAllUsers(page)\n    },[])\n    \n    const getAllUsers=async(page)=>{\n        try {\n        const token=localStorage.getItem(USER_CONFIG.TOKEN_DETAIL)\n            const usersList=await API_REQUEST.getData(URSL.GET_USER,token,{page:page});\n            if(usersList.data.status==200){\n                console.log(usersList.data.data)\n                setAllUsers(usersList?.data?.data.users)\n                PageSize=usersList?.data.data.pagination.totalPages\n                setCurrentPage(usersList?.data.data.pagination.page)\n            }else{\n                throw usersList\n            }\n        } catch (error) {\n            console.log(error);\n        }\n    }\n    const deleteUser=async(item,selectedIndex)=>{\n        try {\n            const token=localStorage.getItem(USER_CONFIG.TOKEN_DETAIL);\n            const response=await API_REQUEST.postData(URSL.DELETE_USER,{id:item.id},token)\n            if(response.data.status !== 200)\n                throw response\n\n            setAllUsers(items =>\n                items.map((value, index) => {\n                    if (index === selectedIndex) {\n                        value.is_delete =  value.is_delete?0:1;\n                    } \n                    return value;\n                }),\n            );\n            toast(`Delete Status Updated Successfully`)\n        } catch (error) {\n            toast(\"User not deleted\")\n            console.log(error);\n        }\n    }\n    const updateuserActiveStatus=async(item,selectedIndex)=>{\n        try {\n            const token=localStorage.getItem(USER_CONFIG.TOKEN_DETAIL);\n            const response=await API_REQUEST.postData(URSL.UPDATE_STAUS_USER,{id:item.id},token)\n            if(response.data.status !== 200)\n                throw response\n            setAllUsers(items =>\n                items.map((value, index) => {\n                    if (index === selectedIndex) {\n                        value.is_active =  value.is_active?0:1;\n                    } \n                    return value;\n                }),\n            );\n            toast(\"User Active Status Changed\")\n        } catch (error) {\n            toast(\"User Active Status not Changes\")\n            console.log(error);\n        }\n    }\n    return(\n        <>\n            \n            <TitleCard title=\"Current Users\" topMargin=\"mt-2\" TopSideButtons={<>\n                <TopSecondButton />\n                <TopSideButtons />\n            </>}>\n\n                {/* Leads List in table format loaded from slice after api call */}\n\n            <SearchBar url={URSL.SEARHC_USER} results={(value)=>serDearchedUser(value)} />\n            <div className=\"overflow-x-auto w-full\">\n                <table className=\"table w-full\">\n                    <thead>\n                    <tr>\n                        <th>Name</th>\n                        <th>Email Id</th>\n                        <th>Phone</th>\n                        <th>Age</th>\n                        <th>Gender</th>\n                        <th>Occupation</th>\n                        <th>Gotra</th>\n                        <th>Activity</th>\n                        <th>Delete Status</th>\n                        <th>Actions</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                        {\n                            (searchedUser.length==0?allUsers:searchedUser).length>0 &&\n                            (searchedUser.length==0?allUsers:searchedUser).map((l, k) => {\n                                return(\n                                    <tr key={k}>\n                                        <td>\n                                            <div className=\"flex items-center space-x-3\">\n                                                {/* <div className=\"avatar\">\n                                                    <div className=\"mask mask-squircle w-12 h-12\">\n                                                        <img src={l.avatar} alt=\"Avatar\" />\n                                                    </div>\n                                                </div> */}\n                                                <div>\n                                                    <div className=\"font-bold\">{l.full_name}</div>\n                                                </div>\n                                            </div>\n                                        </td>\n                                        <td>{l.email}</td>\n                                        <td>{l.phone}</td>\n                                        <td>{l.age}</td>\n                                        <td>{l.gender}</td>\n                                        <td>{l.occupation}</td>\n                                        <td>{l.gotra}</td>\n                                        <td>\n                                            <button className=\"btn btn-square btn-ghost\" onClick={() => updateuserActiveStatus(l,k)}>\n                                                <td style={{color:l.is_active?\"green\":\"red\"}}>{l.is_active?\"ACTIVE\":\"InActive\"}</td>\n                                            </button>\n                                        </td>\n                                        <td>\n                                            <button className=\"btn btn-square btn-ghost\" onClick={() => deleteUser(l,k)}>\n                                                <td style={{color:l.is_delete?\"green\":\"red\"}}>{l.is_delete?\"DELETED\":\"DELETE\"}</td>\n                                            </button>\n                                        </td>\n                                        <td>\n                                            <button className=\"btn btn-square btn-ghost\" onClick={() => dispatch(openModal({title : \"Edit User\", bodyType : MODAL_BODY_TYPES.EDIT_LEAD_MODAL,extraObject:l}))}>\n                                                <td style={{color:\"green\"}}>Edit</td>\n                                            </button>\n                                        </td>\n                                    </tr>\n                                )\n                            })\n                        }\n                    </tbody>\n                </table>\n            </div>\n            </TitleCard>\n            {\n                searchedUser.length==0 &&\n                <ReactPaginate\n                    onPageChange={paginate}\n                    pageCount={PageSize}\n                    previousLabel={'Prev'}\n                    nextLabel={'Next'}\n                    containerClassName={'pagination'}\n                    pageLinkClassName={'page-number'}\n                    previousLinkClassName={'page-number'}\n                    nextLinkClassName={'page-number'}\n                    activeLinkClassName={'active'}\n                />\n            }\n            <ToastContainer />\n        </>\n    )\n}\n\n\nexport default Leads","import { useEffect } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { setPageTitle } from '../../features/common/headerSlice'\nimport Leads from '../../features/leads'\n\nfunction InternalPage(){\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        dispatch(setPageTitle({ title : \"Users\"}))\n      }, [])\n\n\n    return(\n        <Leads />\n    )\n}\n\nexport default InternalPage"],"names":["SearchBar","_ref","url","results","_useState","isNoData","useState","_useState2","_slicedToArray","search","setSearch","searchData","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","token","result","wrap","_context","prev","next","console","log","abrupt","localStorage","getItem","USER_CONFIG","TOKEN_DETAIL","API_REQUEST","postData","query","sent","error","data","t0","stop","apply","arguments","_jsxs","style","padding","marginBottom","borderRadius","borderWidth","borderColor","display","justifyContent","children","_jsx","className","type","placeholder","value","onChange","e","target","width","paddingLeft","fontWeight","borderStyle","border","onClick","TopSideButtons","dispatch","useDispatch","openModal","title","bodyType","MODAL_BODY_TYPES","LEAD_ADD_NEW","TopSecondButton","marginLeft","MODAL_EXCEL_ADD","PageSize","allUsers","setAllUsers","_useState3","_useState4","searchedUser","serDearchedUser","_useState5","_useState6","page","_useState7","_useState8","setCurrentPage","useEffect","getAllUsers","usersList","_usersList$data","getData","URSL","GET_USER","status","users","pagination","totalPages","_x","deleteUser","_ref3","_callee2","item","selectedIndex","response","_context2","DELETE_USER","id","items","map","index","is_delete","toast","_x2","_x3","updateuserActiveStatus","_ref4","_callee3","_context3","UPDATE_STAUS_USER","is_active","_x4","_x5","_Fragment","TitleCard","topMargin","SEARHC_USER","length","l","k","full_name","email","phone","age","gender","occupation","gotra","color","EDIT_LEAD_MODAL","extraObject","ReactPaginate","onPageChange","selected","pageCount","previousLabel","nextLabel","containerClassName","pageLinkClassName","previousLinkClassName","nextLinkClassName","activeLinkClassName","ToastContainer","setPageTitle","Leads"],"sourceRoot":""}