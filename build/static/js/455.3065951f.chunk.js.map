{"version":3,"file":"static/js/455.3065951f.chunk.js","mappings":"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","sources":["components/Input/TextAreaInput.js","components/Input/ToogleInput.js","features/settings/profilesettings/index.js","pages/protected/ProfileSettings.js"],"sourcesContent":["import { useState } from \"react\"\n\n\nfunction TextAreaInput({labelTitle, labelStyle, type, containerStyle, defaultValue, placeholder, updateFormValue, updateType}){\n\n    const [value, setValue] = useState(defaultValue)\n\n    const updateInputValue = (val) => {\n        setValue(val)\n        updateFormValue({updateType, value : val})\n    }\n\n    return(\n        <div className={`form-control w-full ${containerStyle}`}>\n            <label className=\"label\">\n                <span className={\"label-text text-base-content \" + labelStyle}>{labelTitle}</span>\n            </label>\n            <textarea value={value} className=\"textarea textarea-bordered w-full\" placeholder={placeholder || \"\"} onChange={(e) => updateInputValue(e.target.value)}></textarea>\n        </div>\n    )\n}\n\n\nexport default TextAreaInput","import { useState } from \"react\"\n\n\nfunction ToogleInput({labelTitle, labelStyle, type, containerStyle, defaultValue, placeholder, updateFormValue, updateType}){\n\n    const [value, setValue] = useState(defaultValue)\n\n    const updateToogleValue = () => {\n        setValue(!value)\n        updateFormValue({updateType, value : !value})\n    }\n\n    return(\n        <div className={`form-control w-full ${containerStyle}`}>\n            <label className=\"label cursor-pointer\">\n                <span className={\"label-text text-base-content \" + labelStyle}>{labelTitle}</span>\n                <input type=\"checkbox\" className=\"toggle\" checked={value}  onChange={(e) => updateToogleValue()}/>\n            </label>\n        </div>\n    )\n}\n\n\nexport default ToogleInput\n","import moment from \"moment\"\nimport { useEffect, useState } from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport TitleCard from \"../../../components/Cards/TitleCard\"\nimport { showNotification } from '../../common/headerSlice'\nimport InputText from '../../../components/Input/InputText'\nimport TextAreaInput from '../../../components/Input/TextAreaInput'\nimport ToogleInput from '../../../components/Input/ToogleInput'\n\nfunction ProfileSettings(){\n\n\n    const dispatch = useDispatch()\n\n    // Call API to update profile settings changes\n    const updateProfile = () => {\n        dispatch(showNotification({message : \"Profile Updated\", status : 1}))    \n    }\n\n    const updateFormValue = ({updateType, value}) => {\n        console.log(updateType)\n    }\n\n    return(\n        <>\n            \n            <TitleCard title=\"Profile Settings\" topMargin=\"mt-2\">\n\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                    <InputText labelTitle=\"Name\" defaultValue=\"Alex\" updateFormValue={updateFormValue}/>\n                    <InputText labelTitle=\"Email Id\" defaultValue=\"alex@dashwind.com\" updateFormValue={updateFormValue}/>\n                    <InputText labelTitle=\"Title\" defaultValue=\"UI/UX Designer\" updateFormValue={updateFormValue}/>\n                    <InputText labelTitle=\"Place\" defaultValue=\"California\" updateFormValue={updateFormValue}/>\n                    <TextAreaInput labelTitle=\"About\" defaultValue=\"Doing what I love, part time traveller\" updateFormValue={updateFormValue}/>\n                </div>\n                <div className=\"divider\" ></div>\n\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                    <InputText labelTitle=\"Language\" defaultValue=\"English\" updateFormValue={updateFormValue}/>\n                    <InputText labelTitle=\"Timezone\" defaultValue=\"IST\" updateFormValue={updateFormValue}/>\n                    <ToogleInput updateType=\"syncData\" labelTitle=\"Sync Data\" defaultValue={true} updateFormValue={updateFormValue}/>\n                </div>\n\n                <div className=\"mt-16\"><button className=\"btn btn-primary float-right\" onClick={() => updateProfile()}>Update</button></div>\n            </TitleCard>\n        </>\n    )\n}\n\n\nexport default ProfileSettings","import { useEffect } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { setPageTitle } from '../../features/common/headerSlice'\nimport ProfileSettings from '../../features/settings/profilesettings'\n\nfunction InternalPage(){\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        dispatch(setPageTitle({ title : \"Settings\"}))\n      }, [])\n\n\n    return(\n        <ProfileSettings />\n    )\n}\n\nexport default InternalPage"],"names":["_ref","labelTitle","labelStyle","containerStyle","type","defaultValue","placeholder","updateFormValue","updateType","_useState","useState","_useState2","_slicedToArray","value","setValue","_jsxs","className","concat","children","_jsx","onChange","e","val","target","checked","dispatch","useDispatch","console","log","_Fragment","TitleCard","title","topMargin","InputText","TextAreaInput","ToogleInput","onClick","showNotification","message","status","useEffect","setPageTitle","ProfileSettings"],"sourceRoot":""}